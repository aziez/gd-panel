generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "postgresql"
  url          = env("DATABASE_URL")
  directUrl    = env("DIRECT_URL")
  relationMode = "prisma"
}

model Customer {
  id        String    @id @default(uuid()) @db.Uuid
  nama      String    @db.VarChar(100)
  telp      String    @db.VarChar(16)
  email     String?   @db.VarChar(25)
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  invoice   Invoice[]
}

model Invoice {
  id          String   @id @default(uuid()) @db.Uuid
  customer_id String   @db.Uuid
  amount      Int
  status      String   @db.VarChar(10)
  date        DateTime @db.Date
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  customer    Customer @relation(fields: [customer_id], references: [id])

  @@index([customer_id])
}

model User {
  id            String    @id @default(uuid()) @db.Uuid
  username      String    @db.VarChar(25)
  email         String    @unique @db.VarChar(25)
  password      String?   @db.VarChar(100)
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  emailVerified DateTime?
  image         String?
  accounts      Account[]
}

model Account {
  id                String  @id @default(uuid()) @db.Uuid
  userId            String
  provider          String
  providerAccountId String
  type              String?
  refresh_token     String?
  accsess_token     String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@index([userId])
}
