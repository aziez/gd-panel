// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider    = "prisma-client-js"
}

datasource db {
  provider    = "postgresql"
  url = env("DATABASE_URL") // uses connection pooling
  // url = env("DIRECT_URL") // uses connection pooling
  directUrl = env("DIRECT_URL")
  relationMode = "prisma"
  // directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connecti
}


model Customer {
  id            String @id @default(uuid()) @db.Uuid
  nama          String @db.VarChar(100)
  telp          String @db.VarChar(16)
  email         String? @db.VarChar(25)
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  invoice       Invoice[]
}

model Invoice {
  id            String @id @default(uuid()) @db.Uuid
  customer_id   String @db.Uuid
  customer      Customer @relation(fields: [customer_id], references: [id])
  amount        Int
  status        String @db.VarChar(10)
  date          DateTime @db.Date
  createdAt     DateTime @default(now())
  updatedAt      DateTime @updatedAt

  @@index([customer_id])
}

model User {
  id        String @id @default(uuid()) @db.Uuid
  username  String @db.VarChar(25)
  email     String @db.VarChar(25) @unique
  emailVerified DateTime?
  password  String? @db.VarChar(100)
  image     String? 
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  accounts  Account[]
}


model Account {
  id    String @id @default(uuid()) @db.Uuid
  userId  String
  provider  String
  providerAccountId String
  type  String?
  refresh_token String? @db.VarChar(255)
  accsess_token String? @db.VarChar(255)
  expires_at  Int?
  token_type String?
  scope String?
  id_token  String? @db.VarChar(255)
  session_state String?
  user  User @relation(fields: [userId], references: [id], onDelete: Cascade)
  @@unique([provider, providerAccountId])
  @@index([userId])
}



